<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

    <!-- base-package로 시작하는 모든 패키지를 스캔 대상에 포함. -->
	<context:component-scan base-package="com.springbook.biz"></context:component-scan>


	<bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean>
	<bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean>
	<bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean>
	<bean id="after" class="com.springbook.biz.common.AfterAdvice"></bean>
	<bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean>
	
	<aop:config>	
		 <aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" />
		 <aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))" />
		 
		 <!-- 어드바이스 동작 시점 -->
		 
		 <!-- 1.Before 어드바이스
		      : 포인트컷으로 지정된 메소드 호출 시, 메소드가 실행되기 전에 처리될 내용들을 기술하기 위해 사용. 
		        <aop:before> 엘리먼트사용   -->
		 <aop:aspect ref="before">
		 	<aop:before pointcut-ref="allPointcut" method="beforeLog" />
		 </aop:aspect>
		 
		 <!-- 2.After Returning 어드바이스
		      : 포인트컷으로 지정된 메소드가 정상적으로 실행되고 나서, 메소드 수행 결과로 생성된 데이터를 리턴하는 시점에 동작. 
		        <aop:after-returning> 엘리먼트 사용-->
		 <aop:aspect ref="afterReturning">
		 	<aop:after-returning pointcut-ref="getPointcut" method="afterLog" 
		 					  	 returning="returnObj"/> <!-- 바인드 변수에 대한 매핑 설정.
		 					  	 비즈니스 메소드가 리턴한 결과값을 "returnObj"라는 바인드 변수에 바인드하는 설정 -->
		 </aop:aspect>
		 
		 <!-- 3.After Throwing 어드바이스
		      : 포인트컷으로 지정된 메소드가 실행되다가 예외가 발생하는 시점에 동작. 
		        <aop:after-throwing> 엘리먼트 사용-->
		 <aop:aspect ref="afterThrowing">
		 	<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog"
		 						throwing = "exceptObj" /><!-- 바인드 변수에 대한 매핑 설정.
		 					  	비즈니스 메소드에서 발생한 예외 객체를 "exceptObj"라는 바인드 변수에 바인드하는 설정 -->
		 </aop:aspect>
		 
		 <!-- 4.After 어드바이스
		      : try-catch-finally 구문에서 finally블록 처럼 예외 발생 여부에 상관없이,포인트컷으로 지정된 메소드 실행 이후 동작.
		       (예외 발생 시, After Throwing 어드바이스 보다 먼저 동작) <aop:after> 엘리먼트 사용-->
		 <aop:aspect ref="after">
		 	<aop:after pointcut-ref="allPointcut" method="finallyLog" />
		 </aop:aspect>
		 
		  <!-- 5.Around 어드바이스
		      : 포인트 컷으로 지정된 메소드 실행 전과 후에 모두 동작.
		      <aop:around> 엘리먼트 사용-->
		 <aop:aspect ref="around">
		 	<aop:around pointcut-ref="allPointcut" method="aroundLog" />
		 </aop:aspect>
		 
	 </aop:config>	
	
</beans>
